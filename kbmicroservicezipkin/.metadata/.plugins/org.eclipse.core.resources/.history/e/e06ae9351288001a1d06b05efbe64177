package com.currency.conversion.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

@Service
public class CurrencyConversionDelegate {
	
	@Autowired
	CurrencyConversionServiceProxy proxyService;
	@HystrixCommand(fallbackMethod = "fallBackGetCurrencyConversionFactor")
	public Double getCurrencyConversionFactor(String countryCode)
	{
		try {
		Double conversionFactor =proxyService.getConversionFactor(countryCode);
		
		return conversionFactor;
		}
		catch(RuntimeException ex)
		{
			throw new RuntimeException("Not Available");
		}
		
	}
	
	public Double fallBackGetCurrencyConversionFactor(String countryCode)
	{
		System.out.println("fallBackGetCurrencyConversionFactor***");
		Double defaultValue = 0d;
		return defaultValue;
		
	}

}
